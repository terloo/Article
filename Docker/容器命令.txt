docker run [OPTIONS] IMAGE [COMMAND] [ARG...]
新建并启动容器
	[OPTIONS]
		--name	给容器起一个名字，不起会随机分配
		-d 		后台运行容器并返回容器ID，即启动守护式容器
		-i		以交互模式运行容器，通常与-t结合使用
		-t 		为容器重新分配一个伪终端，通常与-i结合使用
		-P 		随机端口映射
		-p 		指定端口映射，有一下四种形式
			ip:hostPort:containerPort
			ip::containerPort
			hostPort:containerPort		常用
			containerPort

docker ps [OPTIONS]
列出当前正在运行的容器
	[OPTIONS]
		-a 			正在运行的+历史上运行过的
		-l			上一次运行的容器
		-n [int] 	上[int]次运行的容器
		-q			静默模式，只显示编号

exit		容器停止并退出
或
crtl+P+Q	容器不停止退出
退出容器

docker start 容器名(ID)
启动容器

docker restart 容器名(ID)
重启容器，返回编号

docker stop 容器名(ID)
停止容器

docker kill 镜像名(ID)
强制停止容器

docker rm 容器ID
删除容器
	-f 强制删除

---------------------------重要---------------------------

docker run -d 镜像名(ID)
启动守护式容器
问题：使用docker ps查看时会发现容器已经退出
解释：docker容器在后台运行，就必须有个前台进程
容器命令如果不是哪些一直挂起的命令（比如top，tail），就会自动退出

docker logs -f -t --tail [int] 容器ID
查看容器日志
	-t 		显示时间戳
	-f 		自动刷新显示最新日志
	-tail 	显示最后多少条

docker top 容器ID
查看容器内的进程

docker inspect 容器ID
查看容器内细节

docker exec -it 容器ID bashShell
docker attach 容器ID
重新进入容器

docker cp 容器ID:容器内路径 宿主机路径
从容器中复制文件到宿主机

docker commit -m='提交信息' -a='作者' 容器ID 新镜像名[:tag]
将自定义之后的容器提交为新的镜像
